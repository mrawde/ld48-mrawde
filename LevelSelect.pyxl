LevelSelect
════════════════════════════════════════════════════════════════════════
// Put local state for the mode here.  Declare variables with let, constants with const, and functions with def.


def draw_level_selection(game_progress):
    const x_offset = LEVEL_SELECT_OFFSET.x
    const level_offset = 1.1 * LEVEL_SELECT_SIZE
    let y_offset = LEVEL_SELECT_OFFSET.y
    const level_text_color = LEVEL_SELECT_COLOR
    const level_font = weaver_10_font
    
    let button_states = []
    for pack_idx < size(PACKS):
        const pack = PACKS[pack_idx]
        draw_text({
            pos: xy(x_offset, y_offset),
            font: level_font,
            text: pack.name,
            color: level_text_color,
        })
        y_offset += 4
        draw_line({
            A: xy(x_offset, y_offset),
            B: xy(100, y_offset),
            color: level_text_color,
        })
        
        y_offset += 4
        const farthest = game_progress.farthest[pack.name]
        for i < size(pack.levels):
            const level = pack.levels[i]
            const corner = xy(i, 0) * level_offset + xy(x_offset, y_offset)
            const level_text = replace("N", {N: level.num, })
            const finished = i < farthest
            
            const text_color = if finished then #0f0 else #fff
            let bs = button_state({
                corner: corner,
                size: LEVEL_SELECT_SIZE,
                text_color: text_color,
                text: level_text,
            })
            bs.pack_idx = pack_idx
            bs.level_idx = i
            push(button_states, bs)
        y_offset += 1.3 LEVEL_SELECT_SIZE.y
        
        y_offset += level_font.line_height
        
    for bs in button_states:
        if bs.clicked:
            game_progress.curr_pack_idx = bs.pack_idx
            game_progress.curr_level_idx = bs.level_idx
            set_mode(PlayLevel)

enter
────────────────────────────────────────────────────────────────────────
// This event runs when the mode is entered via set_mode() or push_mode().
device_control("set_mouse_cursor", "none")
set_background(TitleScreen_sprite)

frame
────────────────────────────────────────────────────────────────────────
// This event runs 60 times per second. Game logic, simulation, user input, and drawing all go here.
bg_music_per_frame()
update_cursor_hover()
draw_mouse_cursor()

draw_level_selection(game_progress)

update_curr_drag()


leave
────────────────────────────────────────────────────────────────────────
update_curr_drag()
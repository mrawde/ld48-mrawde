const unlock_all = IDE_USER == "Ed"

def init_game_progress():
    
    /*if IDE_USER == "Ed":
        debug_print("reseting progress!")
        save_local("progress", {})*/
    let progress = load_local("progress")
    if not progress:
        progress = {
            curr_pack_idx: 0,
            curr_level_idx: 0,
            farthest: {},
            done: false,
        }
        
    if not progress.farthest:
        progress.farthest = {}
        
    for i < size(PACKS):
        const pack = PACKS[i]
        if progress.farthest[pack.id] == ∅:
            progress.farthest[pack.id] = if i == 0 then 0 else -1
        if unlock_all:
            progress.farthest[pack.id] = size(pack.levels)
    return progress
        
    
def advance_game_progress(game_progress):
    game_progress.curr_level_idx += 1
    const pack = PACKS[game_progress.curr_pack_idx]
    game_progress.farthest[pack.id] = max(game_progress.farthest[pack.id], game_progress.curr_level_idx)
    const num_levels_in_pack = size(PACKS[game_progress.curr_pack_idx].levels)
    if game_progress.curr_level_idx ≥ num_levels_in_pack:
        game_progress.curr_pack_idx += 1
        game_progress.curr_level_idx = 0
        const next_pack = PACKS[game_progress.curr_pack_idx]
        if next_pack:
            game_progress.farthest[next_pack.id] = 0
        
    if not unlock_all:
        save_local("progress", game_progress)
    
let game_progress = init_game_progress()
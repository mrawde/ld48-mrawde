#!/usr/bin/env python

import os
import subprocess
QUADPLAY_ROOT="/Users/Ed/projects/quadplay-dev"

def find_binary(name):
    return os.path.join(QUADPLAY_ROOT, "tools", name)

def go(aseprite, size):
    e = "scripts/export_aseprite"
    subprocess.check_call([
        e, aseprite])

    dirName, baseName = os.path.split(aseprite)
    name, ext = os.path.splitext(baseName)
    asepriteJson = os.path.join(dirName, 
        name + '.aseprite.json')
    spritePng = name + '.png'

    b = find_binary('sprite_json_generator.py')
    subprocess.check_call([
        b, '--new',
        '--aseprite', asepriteJson,
        '--size', size[0], size[1],
        spritePng])

if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('aseprite')
    parser.add_argument('size', nargs=2)
    args = parser.parse_args()
    go(args.aseprite, args.size)
